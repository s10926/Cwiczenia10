// <auto-generated />
using System;
using Cwiczenia10.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cwiczenia10.Migrations
{
    [DbContext(typeof(s10926Context))]
    [Migration("20200621163346_PromoteStudentsProcedure")]
    partial class PromoteStudentsProcedure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cwiczenia10.Models.Enrollment", b =>
                {
                    b.Property<int>("IdEnrollment")
                        .HasColumnType("int");

                    b.Property<int>("IdStudy")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("IdEnrollment")
                        .HasName("Enrollment_pk");

                    b.HasIndex("IdStudy");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("Cwiczenia10.Models.Student", b =>
                {
                    b.Property<string>("IndexNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IndexNumber")
                        .HasName("Student_pk");

                    b.HasIndex("IdEnrollment");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Cwiczenia10.Models.Studies", b =>
                {
                    b.Property<int>("IdStudy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdStudy")
                        .HasName("Studies_pk");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("Cwiczenia10.Models.Test", b =>
                {
                    b.Property<string>("Nip")
                        .HasColumnName("nip")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.ToTable("test");
                });

            modelBuilder.Entity("Cwiczenia10.Models.Enrollment", b =>
                {
                    b.HasOne("Cwiczenia10.Models.Studies", "IdStudyNavigation")
                        .WithMany("Enrollment")
                        .HasForeignKey("IdStudy")
                        .HasConstraintName("Enrollment_Studies")
                        .IsRequired();
                });

            modelBuilder.Entity("Cwiczenia10.Models.Student", b =>
                {
                    b.HasOne("Cwiczenia10.Models.Enrollment", "IdEnrollmentNavigation")
                        .WithMany("Student")
                        .HasForeignKey("IdEnrollment")
                        .HasConstraintName("Student_Enrollment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
